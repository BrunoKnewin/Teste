// <auto-generated />
using Knewin.InfoCity.WebApi.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Knewin.InfoCity.WebApi.Dal.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210430142746_update_user_parm_tables_name")]
    partial class update_user_parm_tables_name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Knewin.InfoCity.WebApi.Model.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Knewin.InfoCity.WebApi.Model.CityBorder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityBorderAId")
                        .HasColumnType("int");

                    b.Property<int>("CityBorderBId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityBorderAId");

                    b.HasIndex("CityBorderBId");

                    b.ToTable("CitiesBorder");
                });

            modelBuilder.Entity("Knewin.InfoCity.WebApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Knewin.InfoCity.WebApi.Model.CityBorder", b =>
                {
                    b.HasOne("Knewin.InfoCity.WebApi.Model.City", "CityBorderA")
                        .WithMany("CityBoders")
                        .HasForeignKey("CityBorderAId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Knewin.InfoCity.WebApi.Model.City", "CityBorderB")
                        .WithMany()
                        .HasForeignKey("CityBorderBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityBorderA");

                    b.Navigation("CityBorderB");
                });

            modelBuilder.Entity("Knewin.InfoCity.WebApi.Model.City", b =>
                {
                    b.Navigation("CityBoders");
                });
#pragma warning restore 612, 618
        }
    }
}
